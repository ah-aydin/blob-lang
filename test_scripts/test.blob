1 + 2;
1 + 2 * 3;
1 * 2 + 3;
1 + 2 / 3;
1 / 2 + 3;
1 + 2 < 3 + 4;
1 > 2 * 3;
1 != 2 + 3;
1 + 2 == 3;
a = 10;
a = 1 + 2 + 3;
a = b + 1 * 2;
a = b * 1 / 2 + 3;
a = b * 1 + 2 / 3;
1 < 1 && 2 >= 1 || 2 == 2;
1 + -2;
!(a > b);
---!-!!1;
---!-!!(1 == 2);
1 * (2 + 3);
a();
a(1);
a(1, 2);
a(1 + 3, b());
a(1 / 2 + b(), 8 == 2);
var a = 1;
var a = b() + 1 * c(2 + 3 / d(4));
while (a() == 5){
  var b = 1 + 2;
  var c = 3 / 4 + d(5 / e(1 + 4));
  var f = 5;
  while (f > 2) {
    f = f - 1;
  }
}
{
  var a = 1 / (2 + 3);
}
a;
func my_func(){
  var a = 1;
  var b = 2;
  var c = a + b;
}
func my_func(a, b, c){
  var d = a;
  var e = b;
  var f = d + e + f / 2;
  return 1 + 2;
}
if (1 == 1) {
  var a = 1;
  var b = 2;
  var c = a + b;
}
if (1 == 1) {
  var a = 1;
} else {
  var b = 2;
}
if (1 == 1) {
  var a = 1;
} else if (2 == 2) {
  var b = 2;
} else if (3 == 3) {
  var c = 3;
} else {
  var d = 4;
}


